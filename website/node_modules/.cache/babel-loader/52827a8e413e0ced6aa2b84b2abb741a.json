{"ast":null,"code":"import _objectSpread from \"/home/ali/Documents/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/ali/Documents/website/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport './Input.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  const invalid = props.invalid,\n        shouldValidate = props.shouldValidate,\n        touched = props.touched,\n        elementType = props.elementType,\n        elementConfig = props.elementConfig,\n        value = props.value,\n        changed = props.changed,\n        label = props.label;\n  let inputElement = null;\n  const inputClasses = [\"input\"];\n\n  if (invalid && shouldValidate && touched) {\n    inputClasses.push(\"invalid\");\n  }\n\n  ;\n\n  switch (elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n        className: inputClasses.join(' ')\n      }, elementConfig), {}, {\n        value: value,\n        onChange: changed\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread(_objectSpread({\n        className: inputClasses.join(' ')\n      }, elementConfig), {}, {\n        value: value,\n        onChange: changed\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: value,\n        onChange: changed,\n        children: elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n        className: inputClasses.join(' ')\n      }, elementConfig), {}, {\n        value: value\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/ali/Documents/website/src/components/UI/Input/Input.js"],"names":["React","input","props","invalid","shouldValidate","touched","elementType","elementConfig","value","changed","label","inputElement","inputClasses","push","join","options","map","option","displayValue"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,QACfC,OADe,GACyED,KADzE,CACfC,OADe;AAAA,QACNC,cADM,GACyEF,KADzE,CACNE,cADM;AAAA,QACUC,OADV,GACyEH,KADzE,CACUG,OADV;AAAA,QACmBC,WADnB,GACyEJ,KADzE,CACmBI,WADnB;AAAA,QACgCC,aADhC,GACyEL,KADzE,CACgCK,aADhC;AAAA,QAC+CC,KAD/C,GACyEN,KADzE,CAC+CM,KAD/C;AAAA,QACsDC,OADtD,GACyEP,KADzE,CACsDO,OADtD;AAAA,QAC+DC,KAD/D,GACyER,KADzE,CAC+DQ,KAD/D;AAGvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;;AAEA,MAAIT,OAAO,IAAIC,cAAX,IAA6BC,OAAjC,EAA0C;AACxCO,IAAAA,YAAY,CAACC,IAAb,CAAkB,SAAlB;AACD;;AAAA;;AAED,UAAQP,WAAR;AAEE,SAAM,OAAN;AACEK,MAAAA,YAAY,gBAAG;AACb,QAAA,SAAS,EAAEC,YAAY,CAACE,IAAb,CAAkB,GAAlB;AADE,SAETP,aAFS;AAGb,QAAA,KAAK,EAAEC,KAHM;AAIb,QAAA,QAAQ,EAAEC;AAJG;AAAA;AAAA;AAAA;AAAA,cAAf;AAMA;;AACF,SAAM,UAAN;AACEE,MAAAA,YAAY,gBAAG;AACb,QAAA,SAAS,EAAEC,YAAY,CAACE,IAAb,CAAkB,GAAlB;AADE,SAETP,aAFS;AAGb,QAAA,KAAK,EAAEC,KAHM;AAIb,QAAA,QAAQ,EAAEC;AAJG;AAAA;AAAA;AAAA;AAAA,cAAf;AAMA;;AACF,SAAM,QAAN;AACEE,MAAAA,YAAY,gBACV;AACE,QAAA,SAAS,EAAEC,YAAY,CAACE,IAAb,CAAkB,GAAlB,CADb;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,QAAQ,EAAEC,OAHZ;AAAA,kBAIGF,aAAa,CAACQ,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,iBAC/B;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACT,KAAzC;AAAA,oBAAiDS,MAAM,CAACC;AAAxD,WAAaD,MAAM,CAACT,KAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AAJH;AAAA;AAAA;AAAA;AAAA,cADF;AAUA;;AAEF;AACEG,MAAAA,YAAY,gBAAG;AACb,QAAA,SAAS,EAAEC,YAAY,CAACE,IAAb,CAAkB,GAAlB;AADE,SAETP,aAFS;AAGb,QAAA,KAAK,EAAEC;AAHM;AAAA;AAAA;AAAA;AAAA,cAAf;AAhCJ;;AAuCA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,gBAA0BE;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvDD;;AAyDA,eAAeV,KAAf","sourcesContent":["import React from 'react';\nimport './Input.scss';\n\nconst input = (props) => {\n  const { invalid, shouldValidate, touched, elementType, elementConfig, value, changed, label } = props;\n\n  let inputElement = null;\n  const inputClasses = [\"input\"];\n\n  if (invalid && shouldValidate && touched) {\n    inputClasses.push(\"invalid\");\n  };\n\n  switch (elementType) {\n\n    case ('input'):\n      inputElement = <input\n        className={inputClasses.join(' ')}\n        {...elementConfig}\n        value={value}\n        onChange={changed}\n      />;\n      break;\n    case ('textarea'):\n      inputElement = <textarea\n        className={inputClasses.join(' ')}\n        {...elementConfig}\n        value={value}\n        onChange={changed}\n      />\n      break;\n    case ('select'):\n      inputElement = (\n        <select\n          className={inputClasses.join(' ')}\n          value={value}\n          onChange={changed}>\n          {elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>{option.displayValue}</option>\n          ))}\n        </select>\n      )\n      break;\n\n    default:\n      inputElement = <input\n        className={inputClasses.join(' ')}\n        {...elementConfig}\n        value={value}\n      />\n  }\n\n  return (\n    <div className=\"input-wrapper\">\n      <label className=\"label\">{label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}