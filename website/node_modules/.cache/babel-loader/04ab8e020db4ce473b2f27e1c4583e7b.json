{"ast":null,"code":"import _regeneratorRuntime from \"/home/ali/Documents/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ali/Documents/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\n\nconst update = ({\n  userId,\n  name,\n  email,\n  password\n}) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n    var _getState, userInfo, _yield$Axios$put, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _getState = getState(), userInfo = _getState.userSignin.userInfo;\n          dispatch({\n            type: USER_UPDATE_REQUEST,\n            payload: {\n              userId,\n              name,\n              email,\n              password\n            }\n          });\n          _context.prev = 2;\n          _context.next = 5;\n          return Axios.put(\"/api/users/\" + userId, {\n            name,\n            email,\n            password\n          }, {\n            headers: {\n              Authorization: 'Bearer ' + userInfo.token\n            }\n          });\n\n        case 5:\n          _yield$Axios$put = _context.sent;\n          data = _yield$Axios$put.data;\n          dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n          });\n          Cookie.set('userInfo', JSON.stringify(data));\n          _context.next = 14;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: _context.t0.message\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst signin = (email, password) => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    var _yield$Axios$post, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dispatch({\n            type: USER_SIGNIN_REQUEST,\n            payload: {\n              email,\n              password\n            }\n          });\n          _context2.prev = 1;\n          _context2.next = 4;\n          return Axios.post(\"/api/users/signin\", {\n            email,\n            password\n          });\n\n        case 4:\n          _yield$Axios$post = _context2.sent;\n          data = _yield$Axios$post.data;\n          dispatch({\n            type: USER_SIGNIN_SUCCESS,\n            payload: data\n          });\n          Cookie.set('userInfo', JSON.stringify(data));\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload: _context2.t0.message\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function (_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconst register = (name, email, password) => /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n    var _yield$Axios$post2, data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          dispatch({\n            type: USER_REGISTER_REQUEST,\n            payload: {\n              name,\n              email,\n              password\n            }\n          });\n          _context3.prev = 1;\n          _context3.next = 4;\n          return Axios.post(\"/api/users/register\", {\n            name,\n            email,\n            password\n          });\n\n        case 4:\n          _yield$Axios$post2 = _context3.sent;\n          data = _yield$Axios$post2.data;\n          dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n          });\n          Cookie.set('userInfo', JSON.stringify(data));\n          _context3.next = 13;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](1);\n          dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: _context3.t0.message\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 10]]);\n  }));\n\n  return function (_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nconst logout = () => dispatch => {\n  Cookie.remove(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nexport { signin, register, logout, update };","map":{"version":3,"sources":["/home/ali/Documents/website/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","update","userId","name","email","password","dispatch","getState","userInfo","userSignin","type","payload","put","headers","Authorization","token","data","set","JSON","stringify","message","signin","post","register","logout","remove"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport {\n  USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,\n  USER_SIGNIN_FAIL, USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL\n} from \"../constants/userConstants\";\n\nconst update = ({ userId, name, email, password }) => async (dispatch, getState) => {\n  const { userSignin: { userInfo } } = getState();\n  dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, name, email, password } });\n  try {\n    const { data } = await Axios.put(\"/api/users/\" + userId,\n      { name, email, password }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\n  }\n}\n\nconst signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\n  }\n}\n\nconst register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", { name, email, password });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\n  }\n}\n\nconst logout = () => (dispatch) => {\n  Cookie.remove(\"userInfo\");\n  dispatch({ type: USER_LOGOUT })\n}\nexport { signin, register, logout, update };"]},"metadata":{},"sourceType":"module"}