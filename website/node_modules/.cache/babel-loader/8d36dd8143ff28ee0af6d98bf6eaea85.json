{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/Kataleya-perfume/kataleya-front/website/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport './Orders.scss';\nimport axios from '../../axios';\nimport ErrorHandler from '../../hoc/ErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Order from './Order/Order';\nimport ScrollToTopOnMount from '../../shared/ScrollToTopOnMount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this);\n\n    if (!this.props.loading) {\n      this.props.orders.length === 0 ? orders = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You do not have any orders yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this) : orders = this.props.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        products: order.products,\n        price: order.price\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this));\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ScrollToTopOnMount, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"main-title\",\n          children: \"Your Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"main-info\",\n          children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eleifend ligula neque, at faucibus metus trum sedru.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"order-list\",\n          children: orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nOrders.propTypes = {\n  orders: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  token: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  fetchOrders: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/ali/Documents/Kataleya-perfume/kataleya-front/website/src/containers/Orders/Orders.js"],"names":["React","Component","axios","ErrorHandler","connect","actions","PropTypes","Spinner","Order","ScrollToTopOnMount","Orders","componentDidMount","props","fetchOrders","token","userId","render","orders","loading","length","map","order","products","price","id","propTypes","array","isRequired","bool","string","func","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;;;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAC7BU,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAlC,EAAyC,KAAKF,KAAL,CAAWG,MAApD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAI,CAAC,KAAKL,KAAL,CAAWM,OAAhB,EAAyB;AACtB,WAAKN,KAAL,CAAWK,MAAX,CAAkBE,MAAlB,KAA6B,CAA9B,GACIF,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,GAEIA,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAAX,CAAkBG,GAAlB,CAAsBC,KAAK,iBACpC,QAAC,KAAD;AAAsB,QAAA,QAAQ,EAAEA,KAAK,CAACC,QAAtC;AAAgD,QAAA,KAAK,EAAED,KAAK,CAACE;AAA7D,SAAYF,KAAK,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,cADS,CAFb;AAKD;;AAAA;AAED,wBACE;AAAA,8BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGP;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAYD;;AA3B4B;;AA4B9B;AAEDP,MAAM,CAACe,SAAP,GAAmB;AACjBR,EAAAA,MAAM,EAAEX,SAAS,CAACoB,KAAV,CAAgBC,UADP;AAEjBT,EAAAA,OAAO,EAAEZ,SAAS,CAACsB,IAAV,CAAeD,UAFP;AAGjBb,EAAAA,KAAK,EAAER,SAAS,CAACuB,MAAV,CAAiBF,UAHP;AAIjBZ,EAAAA,MAAM,EAAET,SAAS,CAACuB,MAAV,CAAiBF,UAJR;AAKjBd,EAAAA,WAAW,EAAEP,SAAS,CAACwB,IAAV,CAAeH;AALX,CAAnB;;AAQA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLf,IAAAA,MAAM,EAAEe,KAAK,CAACX,KAAN,CAAYJ,MADf;AAELC,IAAAA,OAAO,EAAEc,KAAK,CAACX,KAAN,CAAYH,OAFhB;AAGLJ,IAAAA,KAAK,EAAEkB,KAAK,CAACC,IAAN,CAAWnB,KAHb;AAILC,IAAAA,MAAM,EAAEiB,KAAK,CAACC,IAAN,CAAWlB;AAJd,GAAP;AAMD,CAPD;;AASA,MAAMmB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLtB,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBoB,QAAQ,CAAC9B,OAAO,CAACQ,WAAR,CAAoBC,KAApB,EAA2BC,MAA3B,CAAD;AADnC,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAAC2B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/B,YAAY,CAACO,MAAD,EAASR,KAAT,CAAzD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Orders.scss';\nimport axios from '../../axios';\nimport ErrorHandler from '../../hoc/ErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Order from './Order/Order';\nimport ScrollToTopOnMount from '../../shared/ScrollToTopOnMount';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders(this.props.token, this.props.userId);\n  };\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      (this.props.orders.length === 0)\n        ? orders = <p>You do not have any orders yet.</p>\n        : orders = this.props.orders.map(order => (\n          <Order key={order.id} products={order.products} price={order.price} />\n        ))\n    };\n\n    return (\n      <>\n        <ScrollToTopOnMount />\n        <div className=\"orders-container\">\n          <h2 className=\"main-title\">Your Orders</h2>\n          <p className=\"main-info\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eleifend ligula neque, at faucibus metus trum sedru.</p>\n          <ul className=\"order-list\">\n            {orders}\n          </ul>\n        </div>\n      </>\n    );\n  }\n};\n\nOrders.propTypes = {\n  orders: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  token: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  fetchOrders: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}