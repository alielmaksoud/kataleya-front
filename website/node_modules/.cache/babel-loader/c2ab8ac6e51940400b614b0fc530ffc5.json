{"ast":null,"code":"import _objectSpread from \"/home/ali/Documents/Kataleya-perfume/kataleya-front/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { productList } from '../../data/data';\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  productList,\n  products: [],\n  cart: [],\n  wishlist: [],\n  direction: {\n    price: 'relevance'\n  },\n  sortCheckboxValue: 'relevance',\n  detailProduct: null,\n  priceTotal: 0,\n  delivery: 0,\n  orderTotal: 0\n};\n\nconst getItem = id => productList.find(item => item.id === id);\n\nconst fliterProducts = (state, action) => {\n  let tempProducts;\n  action.category === 'female' || action.category === 'male' ? tempProducts = state.productList.filter(item => item.gender === action.category) : tempProducts = state.productList.filter(item => item.category === action.category);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    products: tempProducts,\n    direction: {\n      price: 'relevance'\n    },\n    sortCheckboxValue: 'relevance'\n  });\n};\n\nconst addToCart = (state, action) => {\n  const updatedList = [...state.productList];\n  const cartItemIndex = updatedList.indexOf(getItem(action.id));\n  const cartItem = updatedList[cartItemIndex];\n  cartItem.inCart = true;\n  cartItem.amount = 1;\n  cartItem.size = action.size;\n  const price = cartItem.price;\n  cartItem.total = price;\n\n  const updatedDetailProduct = _objectSpread({}, state.detailProduct);\n\n  updatedDetailProduct.inCart = true;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    productList: updatedList,\n    cart: [...state.cart, cartItem],\n    detailProduct: updatedDetailProduct\n  });\n};\n\nconst addToWishlist = (state, action) => {\n  const updatedList = [...state.productList];\n  const wishlistItemIndex = updatedList.indexOf(getItem(action.id));\n  const wishlistItem = updatedList[wishlistItemIndex];\n  wishlistItem.inWishlist = true;\n\n  const updatedDetailProduct = _objectSpread({}, state.detailProduct);\n\n  updatedDetailProduct.inWishlist = true;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    productList: updatedList,\n    wishlist: [...state.wishlist, wishlistItem],\n    detailProduct: updatedDetailProduct\n  });\n};\n\nconst sortProducts = (state, action) => {\n  const sortedProducts = [...state.products];\n  sortedProducts.sort((a, b) => {\n    switch (state.direction[action.priceKey]) {\n      case 'relevance':\n        return a[action.idKey] - b[action.idKey];\n\n      case 'price - low to high':\n        return a[action.priceKey] - b[action.priceKey];\n\n      case 'price - high to low':\n        return b[action.priceKey] - a[action.priceKey];\n\n      default:\n        return sortedProducts;\n    }\n  });\n  return _objectSpread(_objectSpread({}, state), {}, {\n    products: sortedProducts\n  });\n};\n\nconst handleDirection = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    direction: {\n      price: state.sortCheckboxValue\n    }\n  });\n};\n\nconst handleCheckboxValue = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    sortCheckboxValue: action.value\n  });\n};\n\nconst showDetails = (state, action) => {\n  const detailProduct = getItem(action.id);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    detailProduct\n  });\n};\n\nconst calculateOrder = (state, action) => {\n  let priceTotal = 0;\n  state.cart.map(item => priceTotal += item.total);\n  let productAmount = 0;\n  state.cart.map(item => productAmount += item.amount);\n  let delivery = 0;\n  if (productAmount > 3) delivery = productAmount * 10;\n  let orderTotal = priceTotal + delivery;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    priceTotal,\n    delivery,\n    orderTotal\n  });\n};\n\nconst removeCartItem = (state, action) => {\n  let updatedProducts = [...state.productList];\n  let tempCart = [...state.cart];\n  tempCart = tempCart.filter(item => item.id !== action.id);\n  const index = updatedProducts.indexOf(getItem(action.id));\n  let removedCartItem = updatedProducts[index];\n  removedCartItem.inCart = false;\n  removedCartItem.amount = 0;\n  removedCartItem.total = 0;\n  removedCartItem.size = null;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    cart: [...tempCart],\n    productList: [...updatedProducts]\n  });\n};\n\nconst handleProductAmount = (state, action) => {\n  let tempCart = [...state.cart];\n  const selectedProduct = tempCart.find(item => item.id === action.id);\n  const index = tempCart.indexOf(selectedProduct);\n  const incrementedProduct = tempCart[index];\n\n  if (action.value === 'increment') {\n    incrementedProduct.amount = incrementedProduct.amount + 1;\n  } else if (action.value === 'decrement') {\n    incrementedProduct.amount = incrementedProduct.amount - 1;\n  }\n\n  incrementedProduct.total = incrementedProduct.amount * incrementedProduct.price;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    cart: [...tempCart]\n  });\n};\n\nconst clearCart = (state, action) => {\n  const updatedProductList = [...state.productList];\n  updatedProductList.forEach(product => {\n    product.total = 0;\n    product.size = null;\n    product.amount = 0;\n    product.inCart = false;\n  });\n  return _objectSpread(_objectSpread({}, state), {}, {\n    productList: updatedProductList,\n    cart: []\n  });\n};\n\nconst removeWishlistItem = (state, action) => {\n  let updatedProducts = [...state.productList];\n  let tempWishlist = [...state.wishlist];\n  tempWishlist = tempWishlist.filter(item => item.id !== action.id);\n  const index = updatedProducts.indexOf(getItem(action.id));\n  let removedWishlistItem = updatedProducts[index];\n  removedWishlistItem.inWishlist = false;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    wishlist: [...tempWishlist],\n    productList: [...updatedProducts]\n  });\n};\n\nconst clearWishlist = (state, action) => {\n  const updatedProductList = [...state.productList];\n  updatedProductList.forEach(product => {\n    product.inWishlist = false;\n  });\n  return _objectSpread(_objectSpread({}, state), {}, {\n    productList: updatedProductList,\n    wishlist: []\n  });\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FILTER_PRODUCTS:\n      return fliterProducts(state, action);\n\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.ADD_TO_WISHLIST:\n      return addToWishlist(state, action);\n\n    case actionTypes.SORT_PRODUCTS:\n      return sortProducts(state, action);\n\n    case actionTypes.HANDLE_DIRECTION:\n      return handleDirection(state, action);\n\n    case actionTypes.HANDLE_CHECKBOX_VALUE:\n      return handleCheckboxValue(state, action);\n\n    case actionTypes.SHOW_DETAILS:\n      return showDetails(state, action);\n\n    case actionTypes.CALCULATE_ORDER:\n      return calculateOrder(state, action);\n\n    case actionTypes.REMOVE_CART_ITEM:\n      return removeCartItem(state, action);\n\n    case actionTypes.HANDLE_PRODUCT_AMOUNT:\n      return handleProductAmount(state, action);\n\n    case actionTypes.CLEAR_CART:\n      return clearCart(state, action);\n\n    case actionTypes.REMOVE_WISHLIST_ITEM:\n      return removeWishlistItem(state, action);\n\n    case actionTypes.CLEAR_WISHLIST:\n      return clearWishlist(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/home/ali/Documents/Kataleya-perfume/kataleya-front/website/src/store/reducers/productReducer.js"],"names":["productList","actionTypes","initialState","products","cart","wishlist","direction","price","sortCheckboxValue","detailProduct","priceTotal","delivery","orderTotal","getItem","id","find","item","fliterProducts","state","action","tempProducts","category","filter","gender","addToCart","updatedList","cartItemIndex","indexOf","cartItem","inCart","amount","size","total","updatedDetailProduct","addToWishlist","wishlistItemIndex","wishlistItem","inWishlist","sortProducts","sortedProducts","sort","a","b","priceKey","idKey","handleDirection","handleCheckboxValue","value","showDetails","calculateOrder","map","productAmount","removeCartItem","updatedProducts","tempCart","index","removedCartItem","handleProductAmount","selectedProduct","incrementedProduct","clearCart","updatedProductList","forEach","product","removeWishlistItem","tempWishlist","removedWishlistItem","clearWishlist","productReducer","type","FILTER_PRODUCTS","ADD_TO_CART","ADD_TO_WISHLIST","SORT_PRODUCTS","HANDLE_DIRECTION","HANDLE_CHECKBOX_VALUE","SHOW_DETAILS","CALCULATE_ORDER","REMOVE_CART_ITEM","HANDLE_PRODUCT_AMOUNT","CLEAR_CART","REMOVE_WISHLIST_ITEM","CLEAR_WISHLIST"],"mappings":"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","sourcesContent":["import { productList } from '../../data/data';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  productList,\n  products: [],\n  cart: [],\n  wishlist: [],\n  direction: {\n    price: 'relevance'\n  },\n  sortCheckboxValue: 'relevance',\n  detailProduct: null,\n  priceTotal: 0,\n  delivery: 0,\n  orderTotal: 0\n};\n\nconst getItem = id => productList.find(item => item.id === id);\n\nconst fliterProducts = (state, action) => {\n  let tempProducts;\n  (action.category === 'female' || action.category === 'male')\n    ? tempProducts = state.productList.filter(item => item.gender === action.category)\n    : tempProducts = state.productList.filter(item => item.category === action.category);\n\n  return {\n    ...state,\n    products: tempProducts,\n    direction: { price: 'relevance' },\n    sortCheckboxValue: 'relevance'\n  };\n};\n\nconst addToCart = (state, action) => {\n  const updatedList = [...state.productList];\n  const cartItemIndex = updatedList.indexOf(getItem(action.id));\n  const cartItem = updatedList[cartItemIndex];\n\n  cartItem.inCart = true;\n  cartItem.amount = 1;\n  cartItem.size = action.size;\n  const price = cartItem.price;\n  cartItem.total = price;\n\n  const updatedDetailProduct = { ...state.detailProduct };\n  updatedDetailProduct.inCart = true;\n  return {\n    ...state,\n    productList: updatedList,\n    cart: [...state.cart, cartItem],\n    detailProduct: updatedDetailProduct\n  };\n};\n\nconst addToWishlist = (state, action) => {\n  const updatedList = [...state.productList];\n  const wishlistItemIndex = updatedList.indexOf(getItem(action.id));\n  const wishlistItem = updatedList[wishlistItemIndex];\n\n  wishlistItem.inWishlist = true;\n\n  const updatedDetailProduct = { ...state.detailProduct };\n  updatedDetailProduct.inWishlist = true;\n  return {\n    ...state,\n    productList: updatedList,\n    wishlist: [...state.wishlist, wishlistItem],\n    detailProduct: updatedDetailProduct\n  };\n};\n\nconst sortProducts = (state, action) => {\n  const sortedProducts = [...state.products];\n  sortedProducts.sort((a, b) => {\n    switch (state.direction[action.priceKey]) {\n      case 'relevance':\n        return a[action.idKey] - b[action.idKey];\n      case 'price - low to high':\n        return a[action.priceKey] - b[action.priceKey];\n      case 'price - high to low':\n        return b[action.priceKey] - a[action.priceKey];\n      default:\n        return sortedProducts\n    }\n  });\n  return {\n    ...state,\n    products: sortedProducts\n  };\n};\n\nconst handleDirection = (state, action) => {\n  return {\n    ...state,\n    direction: { price: state.sortCheckboxValue }\n  };\n};\n\nconst handleCheckboxValue = (state, action) => {\n  return {\n    ...state,\n    sortCheckboxValue: action.value\n  };\n};\n\nconst showDetails = (state, action) => {\n  const detailProduct = getItem(action.id);\n  return {\n    ...state,\n    detailProduct\n  };\n};\n\nconst calculateOrder = (state, action) => {\n  let priceTotal = 0;\n  state.cart.map(item => (priceTotal += item.total));\n\n  let productAmount = 0;\n  state.cart.map(item => (productAmount += item.amount));\n  let delivery = 0;\n  if (productAmount > 3) delivery = productAmount * 10;\n\n  let orderTotal = priceTotal + delivery;\n  return {\n    ...state,\n    priceTotal,\n    delivery,\n    orderTotal\n  };\n};\n\nconst removeCartItem = (state, action) => {\n  let updatedProducts = [...state.productList];\n  let tempCart = [...state.cart];\n  tempCart = tempCart.filter(item => item.id !== action.id);\n\n  const index = updatedProducts.indexOf(getItem(action.id));\n  let removedCartItem = updatedProducts[index];\n  removedCartItem.inCart = false;\n  removedCartItem.amount = 0;\n  removedCartItem.total = 0;\n  removedCartItem.size = null;\n\n  return {\n    ...state,\n    cart: [...tempCart],\n    productList: [...updatedProducts]\n  };\n};\n\nconst handleProductAmount = (state, action) => {\n  let tempCart = [...state.cart];\n  const selectedProduct = tempCart.find(item => item.id === action.id);\n\n  const index = tempCart.indexOf(selectedProduct);\n  const incrementedProduct = tempCart[index];\n\n  if (action.value === 'increment') {\n    incrementedProduct.amount = incrementedProduct.amount + 1;\n  } else if (action.value === 'decrement') {\n    incrementedProduct.amount = incrementedProduct.amount - 1;\n  }\n  incrementedProduct.total = incrementedProduct.amount * incrementedProduct.price;\n\n  return {\n    ...state,\n    cart: [...tempCart]\n  };\n};\n\nconst clearCart = (state, action) => {\n  const updatedProductList = [...state.productList];\n  updatedProductList.forEach(product => {\n    product.total = 0;\n    product.size = null;\n    product.amount = 0;\n    product.inCart = false;\n  });\n\n  return {\n    ...state,\n    productList: updatedProductList,\n    cart: []\n  };\n};\n\nconst removeWishlistItem = (state, action) => {\n  let updatedProducts = [...state.productList];\n  let tempWishlist = [...state.wishlist];\n  tempWishlist = tempWishlist.filter(item => item.id !== action.id);\n\n  const index = updatedProducts.indexOf(getItem(action.id));\n  let removedWishlistItem = updatedProducts[index];\n  removedWishlistItem.inWishlist = false;\n\n  return {\n    ...state,\n    wishlist: [...tempWishlist],\n    productList: [...updatedProducts]\n  };\n};\n\nconst clearWishlist = (state, action) => {\n  const updatedProductList = [...state.productList];\n  updatedProductList.forEach(product => {\n    product.inWishlist = false;\n  });\n\n  return {\n    ...state,\n    productList: updatedProductList,\n    wishlist: []\n  };\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FILTER_PRODUCTS:\n      return fliterProducts(state, action);\n\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.ADD_TO_WISHLIST:\n      return addToWishlist(state, action);\n\n    case actionTypes.SORT_PRODUCTS:\n      return sortProducts(state, action);\n\n    case actionTypes.HANDLE_DIRECTION:\n      return handleDirection(state, action);\n\n    case actionTypes.HANDLE_CHECKBOX_VALUE:\n      return handleCheckboxValue(state, action);\n\n    case actionTypes.SHOW_DETAILS:\n      return showDetails(state, action);\n\n    case actionTypes.CALCULATE_ORDER:\n      return calculateOrder(state, action);\n\n    case actionTypes.REMOVE_CART_ITEM:\n      return removeCartItem(state, action);\n\n    case actionTypes.HANDLE_PRODUCT_AMOUNT:\n      return handleProductAmount(state, action);\n\n    case actionTypes.CLEAR_CART:\n      return clearCart(state, action);\n\n    case actionTypes.REMOVE_WISHLIST_ITEM:\n      return removeWishlistItem(state, action);\n\n    case actionTypes.CLEAR_WISHLIST:\n      return clearWishlist(state, action);\n\n    default:\n      return state;\n  }\n}\n\nexport default productReducer;"]},"metadata":{},"sourceType":"module"}