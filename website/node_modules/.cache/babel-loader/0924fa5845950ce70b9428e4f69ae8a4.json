{"ast":null,"code":"import _objectSpread from \"/home/ali/Documents/Kataleya-perfume/kataleya-front/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actionTypes';\nimport * as actions from './index';\nimport axios from '../../axios'; // ====== HANDLE ORDER FORM ======\n\nexport const purchaseOrderStart = () => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_START\n  };\n};\nexport const purchaseOrderSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_SUCCESS,\n    id,\n    orderData\n  };\n};\nexport const purchaseOrderFail = error => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_FAIL,\n    error\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n}; // after order button click\n\nexport const purchaseOrder = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseOrderStart());\n    axios.post('/orders.json?auth=' + token, orderData).then(res => {\n      dispatch(purchaseOrderSuccess(res.data.name, orderData));\n      dispatch(actions.clearCart());\n    }).catch(err => {\n      dispatch(purchaseOrderFail(err));\n    });\n  };\n}; // ====== HANDLE ORDER PAGE ======\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    // for start spinner ...\n    dispatch(fetchOrdersStart()); // query params (for check auth and filter orders)\n\n    const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.get('/orders.json' + queryParams).then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread(_objectSpread({}, res.data[key]), {}, {\n          id: key\n        }));\n      }\n\n      ; // instead setState we dispatch actions\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    }).catch(err => {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/ali/Documents/Kataleya-perfume/kataleya-front/website/src/store/actions/orderActions.js"],"names":["actionTypes","actions","axios","purchaseOrderStart","type","PURCHASE_ORDER_START","purchaseOrderSuccess","id","orderData","PURCHASE_ORDER_SUCCESS","purchaseOrderFail","error","PURCHASE_ORDER_FAIL","purchaseInit","PURCHASE_INIT","purchaseOrder","token","dispatch","post","then","res","data","name","clearCart","catch","err","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","fetchedOrders","key","push"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport * as actions from './index';\nimport axios from '../../axios';\n\n// ====== HANDLE ORDER FORM ======\nexport const purchaseOrderStart = () => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_START\n  }\n};\n\nexport const purchaseOrderSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_SUCCESS,\n    id,\n    orderData\n  }\n};\n\nexport const purchaseOrderFail = error => {\n  return {\n    type: actionTypes.PURCHASE_ORDER_FAIL,\n    error\n  }\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  }\n};\n\n// after order button click\nexport const purchaseOrder = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseOrderStart());\n\n    axios.post('/orders.json?auth=' + token, orderData)\n      .then(res => {\n        dispatch(purchaseOrderSuccess(res.data.name, orderData));\n        dispatch(actions.clearCart());\n      })\n      .catch(err => {\n        dispatch(purchaseOrderFail(err));\n      });\n  }\n};\n\n// ====== HANDLE ORDER PAGE ======\nexport const fetchOrdersSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\n\nexport const fetchOrdersFail = (error) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    // for start spinner ...\n    dispatch(fetchOrdersStart());\n    // query params (for check auth and filter orders)\n    const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n\n    axios.get('/orders.json' + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        };\n\n        // instead setState we dispatch actions\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      })\n  }\n};"]},"metadata":{},"sourceType":"module"}